// SPDX-License-Identifier: (LGPL-2.1 OR BSD-2-Clause)
//
// THIS FILE IS AUTOGENERATED BY CARGO-LIBBPF-GEN!

pub use self::imp::*;

#[allow(dead_code)]
#[allow(non_snake_case)]
#[allow(non_camel_case_types)]
#[allow(clippy::transmute_ptr_to_ref)]
#[allow(clippy::upper_case_acronyms)]
#[warn(single_use_lifetimes)]
mod imp {
    use libbpf_rs::libbpf_sys;
    use libbpf_rs::skel::OpenSkel;
    use libbpf_rs::skel::Skel;
    use libbpf_rs::skel::SkelBuilder;

    fn build_skel_config(
    ) -> libbpf_rs::Result<libbpf_rs::__internal_skel::ObjectSkeletonConfig<'static>> {
        let mut builder = libbpf_rs::__internal_skel::ObjectSkeletonConfigBuilder::new(DATA);
        builder
            .name("packet_size_bpf")
            .map("packet_stats", false)
            .prog("tcp_received_packet_size")
            .prog("udp_received_packet_size");

        builder.build()
    }

    #[derive(Default)]
    pub struct PacketSizeSkelBuilder {
        pub obj_builder: libbpf_rs::ObjectBuilder,
    }

    impl<'a> SkelBuilder<'a> for PacketSizeSkelBuilder {
        type Output = OpenPacketSizeSkel<'a>;
        fn open(mut self) -> libbpf_rs::Result<OpenPacketSizeSkel<'a>> {
            let mut skel_config = build_skel_config()?;
            let open_opts = self.obj_builder.opts(std::ptr::null());

            let ret =
                unsafe { libbpf_sys::bpf_object__open_skeleton(skel_config.get(), &open_opts) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::OpenObject::from_ptr(skel_config.object_ptr())? };

            Ok(OpenPacketSizeSkel { obj, skel_config })
        }

        fn open_opts(
            self,
            open_opts: libbpf_sys::bpf_object_open_opts,
        ) -> libbpf_rs::Result<OpenPacketSizeSkel<'a>> {
            let mut skel_config = build_skel_config()?;

            let ret =
                unsafe { libbpf_sys::bpf_object__open_skeleton(skel_config.get(), &open_opts) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::OpenObject::from_ptr(skel_config.object_ptr())? };

            Ok(OpenPacketSizeSkel { obj, skel_config })
        }

        fn object_builder(&self) -> &libbpf_rs::ObjectBuilder {
            &self.obj_builder
        }
        fn object_builder_mut(&mut self) -> &mut libbpf_rs::ObjectBuilder {
            &mut self.obj_builder
        }
    }

    pub struct OpenPacketSizeMaps<'a> {
        inner: &'a libbpf_rs::OpenObject,
    }

    impl OpenPacketSizeMaps<'_> {
        pub fn packet_stats(&self) -> &libbpf_rs::OpenMap {
            self.inner.map("packet_stats").unwrap()
        }
    }

    pub struct OpenPacketSizeMapsMut<'a> {
        inner: &'a mut libbpf_rs::OpenObject,
    }

    impl OpenPacketSizeMapsMut<'_> {
        pub fn packet_stats(&mut self) -> &mut libbpf_rs::OpenMap {
            self.inner.map_mut("packet_stats").unwrap()
        }
    }

    pub struct OpenPacketSizeProgs<'a> {
        inner: &'a libbpf_rs::OpenObject,
    }

    impl OpenPacketSizeProgs<'_> {
        pub fn tcp_received_packet_size(&self) -> &libbpf_rs::OpenProgram {
            self.inner.prog("tcp_received_packet_size").unwrap()
        }

        pub fn udp_received_packet_size(&self) -> &libbpf_rs::OpenProgram {
            self.inner.prog("udp_received_packet_size").unwrap()
        }
    }

    pub struct OpenPacketSizeProgsMut<'a> {
        inner: &'a mut libbpf_rs::OpenObject,
    }

    impl OpenPacketSizeProgsMut<'_> {
        pub fn tcp_received_packet_size(&mut self) -> &mut libbpf_rs::OpenProgram {
            self.inner.prog_mut("tcp_received_packet_size").unwrap()
        }

        pub fn udp_received_packet_size(&mut self) -> &mut libbpf_rs::OpenProgram {
            self.inner.prog_mut("udp_received_packet_size").unwrap()
        }
    }

    pub struct OpenPacketSizeSkel<'a> {
        pub obj: libbpf_rs::OpenObject,
        skel_config: libbpf_rs::__internal_skel::ObjectSkeletonConfig<'a>,
    }

    impl<'a> OpenSkel for OpenPacketSizeSkel<'a> {
        type Output = PacketSizeSkel<'a>;
        fn load(mut self) -> libbpf_rs::Result<PacketSizeSkel<'a>> {
            let ret = unsafe { libbpf_sys::bpf_object__load_skeleton(self.skel_config.get()) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            let obj = unsafe { libbpf_rs::Object::from_ptr(self.obj.take_ptr())? };

            Ok(PacketSizeSkel {
                obj,
                skel_config: self.skel_config,
                links: PacketSizeLinks::default(),
            })
        }

        fn open_object(&self) -> &libbpf_rs::OpenObject {
            &self.obj
        }

        fn open_object_mut(&mut self) -> &mut libbpf_rs::OpenObject {
            &mut self.obj
        }
    }
    impl OpenPacketSizeSkel<'_> {
        pub fn progs(&self) -> OpenPacketSizeProgs<'_> {
            OpenPacketSizeProgs { inner: &self.obj }
        }

        pub fn progs_mut(&mut self) -> OpenPacketSizeProgsMut<'_> {
            OpenPacketSizeProgsMut {
                inner: &mut self.obj,
            }
        }

        pub fn maps(&self) -> OpenPacketSizeMaps<'_> {
            OpenPacketSizeMaps { inner: &self.obj }
        }

        pub fn maps_mut(&mut self) -> OpenPacketSizeMapsMut<'_> {
            OpenPacketSizeMapsMut {
                inner: &mut self.obj,
            }
        }
    }

    pub struct PacketSizeMaps<'a> {
        inner: &'a libbpf_rs::Object,
    }

    impl PacketSizeMaps<'_> {
        pub fn packet_stats(&self) -> &libbpf_rs::Map {
            self.inner.map("packet_stats").unwrap()
        }
    }

    pub struct PacketSizeMapsMut<'a> {
        inner: &'a mut libbpf_rs::Object,
    }

    impl PacketSizeMapsMut<'_> {
        pub fn packet_stats(&mut self) -> &mut libbpf_rs::Map {
            self.inner.map_mut("packet_stats").unwrap()
        }
    }

    pub struct PacketSizeProgs<'a> {
        inner: &'a libbpf_rs::Object,
    }

    impl PacketSizeProgs<'_> {
        pub fn tcp_received_packet_size(&self) -> &libbpf_rs::Program {
            self.inner.prog("tcp_received_packet_size").unwrap()
        }

        pub fn udp_received_packet_size(&self) -> &libbpf_rs::Program {
            self.inner.prog("udp_received_packet_size").unwrap()
        }
    }

    pub struct PacketSizeProgsMut<'a> {
        inner: &'a mut libbpf_rs::Object,
    }

    impl PacketSizeProgsMut<'_> {
        pub fn tcp_received_packet_size(&mut self) -> &mut libbpf_rs::Program {
            self.inner.prog_mut("tcp_received_packet_size").unwrap()
        }

        pub fn udp_received_packet_size(&mut self) -> &mut libbpf_rs::Program {
            self.inner.prog_mut("udp_received_packet_size").unwrap()
        }
    }

    #[derive(Default)]
    pub struct PacketSizeLinks {
        pub tcp_received_packet_size: Option<libbpf_rs::Link>,
        pub udp_received_packet_size: Option<libbpf_rs::Link>,
    }

    pub struct PacketSizeSkel<'a> {
        pub obj: libbpf_rs::Object,
        skel_config: libbpf_rs::__internal_skel::ObjectSkeletonConfig<'a>,
        pub links: PacketSizeLinks,
    }

    unsafe impl Send for PacketSizeSkel<'_> {}
    unsafe impl Sync for PacketSizeSkel<'_> {}

    impl Skel for PacketSizeSkel<'_> {
        fn object(&self) -> &libbpf_rs::Object {
            &self.obj
        }

        fn object_mut(&mut self) -> &mut libbpf_rs::Object {
            &mut self.obj
        }

        fn attach(&mut self) -> libbpf_rs::Result<()> {
            let ret = unsafe { libbpf_sys::bpf_object__attach_skeleton(self.skel_config.get()) };
            if ret != 0 {
                return Err(libbpf_rs::Error::System(-ret));
            }

            self.links = PacketSizeLinks {
                tcp_received_packet_size: (|| {
                    Ok(core::ptr::NonNull::new(self.skel_config.prog_link_ptr(0)?)
                        .map(|ptr| unsafe { libbpf_rs::Link::from_ptr(ptr) }))
                })()?,
                udp_received_packet_size: (|| {
                    Ok(core::ptr::NonNull::new(self.skel_config.prog_link_ptr(1)?)
                        .map(|ptr| unsafe { libbpf_rs::Link::from_ptr(ptr) }))
                })()?,
            };

            Ok(())
        }
    }
    impl PacketSizeSkel<'_> {
        pub fn progs(&self) -> PacketSizeProgs<'_> {
            PacketSizeProgs { inner: &self.obj }
        }

        pub fn progs_mut(&mut self) -> PacketSizeProgsMut<'_> {
            PacketSizeProgsMut {
                inner: &mut self.obj,
            }
        }

        pub fn maps(&self) -> PacketSizeMaps<'_> {
            PacketSizeMaps { inner: &self.obj }
        }

        pub fn maps_mut(&mut self) -> PacketSizeMapsMut<'_> {
            PacketSizeMapsMut {
                inner: &mut self.obj,
            }
        }
    }

    const DATA: &[u8] = &[
        127, 69, 76, 70, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 247, 0, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0,
        0, 64, 0, 13, 0, 1, 0, 0, 46, 115, 116, 114, 116, 97, 98, 0, 46, 115, 121, 109, 116, 97,
        98, 0, 46, 116, 101, 120, 116, 0, 107, 114, 101, 116, 112, 114, 111, 98, 101, 47, 116, 99,
        112, 95, 114, 101, 99, 118, 109, 115, 103, 0, 107, 114, 101, 116, 112, 114, 111, 98, 101,
        47, 117, 100, 112, 95, 114, 101, 99, 118, 109, 115, 103, 0, 108, 105, 99, 101, 110, 115,
        101, 0, 46, 109, 97, 112, 115, 0, 112, 97, 99, 107, 101, 116, 95, 115, 105, 122, 101, 46,
        98, 112, 102, 46, 99, 0, 76, 66, 66, 48, 95, 50, 0, 76, 66, 66, 48, 95, 51, 0, 76, 66, 66,
        49, 95, 50, 0, 76, 66, 66, 49, 95, 51, 0, 76, 66, 66, 50, 95, 50, 0, 76, 66, 66, 50, 95,
        51, 0, 105, 110, 99, 114, 101, 97, 116, 101, 95, 114, 101, 99, 101, 105, 118, 101, 100, 95,
        112, 97, 99, 107, 101, 116, 95, 99, 111, 117, 110, 116, 101, 114, 0, 112, 97, 99, 107, 101,
        116, 95, 115, 116, 97, 116, 115, 0, 116, 99, 112, 95, 114, 101, 99, 101, 105, 118, 101,
        100, 95, 112, 97, 99, 107, 101, 116, 95, 115, 105, 122, 101, 0, 117, 100, 112, 95, 114,
        101, 99, 101, 105, 118, 101, 100, 95, 112, 97, 99, 107, 101, 116, 95, 115, 105, 122, 101,
        0, 95, 95, 108, 105, 99, 101, 110, 115, 101, 0, 46, 114, 101, 108, 46, 116, 101, 120, 116,
        0, 46, 114, 101, 108, 107, 114, 101, 116, 112, 114, 111, 98, 101, 47, 116, 99, 112, 95,
        114, 101, 99, 118, 109, 115, 103, 0, 46, 114, 101, 108, 107, 114, 101, 116, 112, 114, 111,
        98, 101, 47, 117, 100, 112, 95, 114, 101, 99, 118, 109, 115, 103, 0, 46, 66, 84, 70, 0, 46,
        66, 84, 70, 46, 101, 120, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 4, 0, 241, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
        0, 0, 0, 0, 0, 3, 0, 184, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
        3, 0, 240, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 4, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 113, 0, 0, 0, 0, 0, 4, 0, 200, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 4, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0,
        0, 5, 0, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 5, 0, 0, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 0, 0, 0, 18, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 0, 0, 0, 0, 174, 0, 0, 0, 17, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0,
        0, 0, 0, 0, 187, 0, 0, 0, 18, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 1, 0, 0, 0, 0, 0, 0,
        212, 0, 0, 0, 18, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 1, 0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
        17, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 191, 38, 0, 0, 0, 0, 0, 0, 99,
        26, 252, 255, 0, 0, 0, 0, 99, 106, 248, 255, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2,
        0, 0, 252, 255, 255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 1,
        0, 0, 0, 21, 0, 14, 0, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 0, 0, 15, 97, 0, 0, 0, 0, 0, 0, 99,
        16, 0, 0, 0, 0, 0, 0, 97, 162, 248, 255, 0, 0, 0, 0, 15, 18, 0, 0, 0, 0, 0, 0, 99, 42, 244,
        255, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 252, 255, 255, 255, 191, 163, 0,
        0, 0, 0, 0, 0, 7, 3, 0, 0, 244, 255, 255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 183, 4, 0, 0, 2, 0, 0, 0, 5, 0, 7, 0, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2,
        0, 0, 252, 255, 255, 255, 191, 163, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 248, 255, 255, 255, 24,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 4, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 2, 0,
        0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 121, 22, 80, 0, 0, 0, 0, 0, 133, 0, 0, 0, 14, 0, 0, 0, 119,
        0, 0, 0, 32, 0, 0, 0, 99, 10, 252, 255, 0, 0, 0, 0, 99, 106, 248, 255, 0, 0, 0, 0, 191,
        162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 252, 255, 255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 133, 0, 0, 0, 1, 0, 0, 0, 21, 0, 14, 0, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 0, 0,
        15, 97, 0, 0, 0, 0, 0, 0, 99, 16, 0, 0, 0, 0, 0, 0, 97, 162, 248, 255, 0, 0, 0, 0, 15, 18,
        0, 0, 0, 0, 0, 0, 99, 42, 244, 255, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0,
        252, 255, 255, 255, 191, 163, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 244, 255, 255, 255, 24, 1, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 4, 0, 0, 2, 0, 0, 0, 5, 0, 7, 0, 0, 0, 0, 0,
        191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 252, 255, 255, 255, 191, 163, 0, 0, 0, 0, 0, 0, 7,
        3, 0, 0, 248, 255, 255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 4, 0, 0,
        0, 0, 0, 0, 133, 0, 0, 0, 2, 0, 0, 0, 183, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
        121, 22, 80, 0, 0, 0, 0, 0, 133, 0, 0, 0, 14, 0, 0, 0, 119, 0, 0, 0, 32, 0, 0, 0, 99, 10,
        252, 255, 0, 0, 0, 0, 99, 106, 248, 255, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0,
        0, 252, 255, 255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 1, 0,
        0, 0, 21, 0, 14, 0, 0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 0, 0, 15, 97, 0, 0, 0, 0, 0, 0, 99, 16,
        0, 0, 0, 0, 0, 0, 97, 162, 248, 255, 0, 0, 0, 0, 15, 18, 0, 0, 0, 0, 0, 0, 99, 42, 244,
        255, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2, 0, 0, 252, 255, 255, 255, 191, 163, 0,
        0, 0, 0, 0, 0, 7, 3, 0, 0, 244, 255, 255, 255, 24, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 183, 4, 0, 0, 2, 0, 0, 0, 5, 0, 7, 0, 0, 0, 0, 0, 191, 162, 0, 0, 0, 0, 0, 0, 7, 2,
        0, 0, 252, 255, 255, 255, 191, 163, 0, 0, 0, 0, 0, 0, 7, 3, 0, 0, 248, 255, 255, 255, 24,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 183, 4, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 2, 0,
        0, 0, 183, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 71, 80, 76, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        40, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12,
        0, 0, 0, 216, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 1, 0,
        0, 0, 12, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 0, 0, 0, 232, 0, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 0, 12, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 0, 0, 0, 168, 0, 0,
        0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 0, 0, 0,
        159, 235, 1, 0, 24, 0, 0, 0, 0, 0, 0, 0, 200, 2, 0, 0, 200, 2, 0, 0, 239, 3, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 2, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 3, 0, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0,
        0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 2,
        0, 0, 0, 4, 0, 0, 0, 232, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 8, 0, 0, 0, 25, 0, 0, 0, 0, 0,
        0, 8, 9, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 1, 4, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
        2, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 4, 32, 0, 0, 0, 44, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 49,
        0, 0, 0, 5, 0, 0, 0, 64, 0, 0, 0, 61, 0, 0, 0, 7, 0, 0, 0, 128, 0, 0, 0, 65, 0, 0, 0, 10,
        0, 0, 0, 192, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 14, 11, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0,
        0, 13, 0, 0, 0, 0, 84, 0, 0, 0, 8, 0, 0, 0, 88, 0, 0, 0, 2, 0, 0, 0, 108, 0, 0, 0, 1, 0, 0,
        12, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 16, 0, 0, 0, 141, 0, 0, 0, 21, 0, 0, 4, 168, 0, 0,
        0, 149, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 153, 0, 0, 0, 17, 0, 0, 0, 64, 0, 0, 0, 157, 0,
        0, 0, 17, 0, 0, 0, 128, 0, 0, 0, 161, 0, 0, 0, 17, 0, 0, 0, 192, 0, 0, 0, 165, 0, 0, 0, 17,
        0, 0, 0, 0, 1, 0, 0, 168, 0, 0, 0, 17, 0, 0, 0, 64, 1, 0, 0, 171, 0, 0, 0, 17, 0, 0, 0,
        128, 1, 0, 0, 175, 0, 0, 0, 17, 0, 0, 0, 192, 1, 0, 0, 179, 0, 0, 0, 17, 0, 0, 0, 0, 2, 0,
        0, 182, 0, 0, 0, 17, 0, 0, 0, 64, 2, 0, 0, 185, 0, 0, 0, 17, 0, 0, 0, 128, 2, 0, 0, 188, 0,
        0, 0, 17, 0, 0, 0, 192, 2, 0, 0, 191, 0, 0, 0, 17, 0, 0, 0, 0, 3, 0, 0, 194, 0, 0, 0, 17,
        0, 0, 0, 64, 3, 0, 0, 197, 0, 0, 0, 17, 0, 0, 0, 128, 3, 0, 0, 200, 0, 0, 0, 17, 0, 0, 0,
        192, 3, 0, 0, 208, 0, 0, 0, 17, 0, 0, 0, 0, 4, 0, 0, 211, 0, 0, 0, 17, 0, 0, 0, 64, 4, 0,
        0, 214, 0, 0, 0, 17, 0, 0, 0, 128, 4, 0, 0, 220, 0, 0, 0, 17, 0, 0, 0, 192, 4, 0, 0, 223,
        0, 0, 0, 17, 0, 0, 0, 0, 5, 0, 0, 226, 0, 0, 0, 0, 0, 0, 1, 8, 0, 0, 0, 64, 0, 0, 0, 0, 0,
        0, 0, 1, 0, 0, 13, 2, 0, 0, 0, 240, 0, 0, 0, 15, 0, 0, 0, 244, 0, 0, 0, 1, 0, 0, 12, 18, 0,
        0, 0, 13, 1, 0, 0, 1, 0, 0, 12, 18, 0, 0, 0, 38, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 8, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 21, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 43, 1, 0, 0, 0,
        0, 0, 14, 22, 0, 0, 0, 1, 0, 0, 0, 175, 3, 0, 0, 1, 0, 0, 15, 4, 0, 0, 0, 23, 0, 0, 0, 0,
        0, 0, 0, 4, 0, 0, 0, 183, 3, 0, 0, 1, 0, 0, 15, 32, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 32,
        0, 0, 0, 0, 105, 110, 116, 0, 95, 95, 65, 82, 82, 65, 89, 95, 83, 73, 90, 69, 95, 84, 89,
        80, 69, 95, 95, 0, 95, 95, 117, 51, 50, 0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105,
        110, 116, 0, 116, 121, 112, 101, 0, 109, 97, 120, 95, 101, 110, 116, 114, 105, 101, 115, 0,
        107, 101, 121, 0, 118, 97, 108, 117, 101, 0, 112, 97, 99, 107, 101, 116, 95, 115, 116, 97,
        116, 115, 0, 112, 105, 100, 0, 115, 105, 122, 101, 95, 111, 102, 95, 110, 101, 119, 95,
        112, 97, 99, 107, 101, 116, 115, 0, 105, 110, 99, 114, 101, 97, 116, 101, 95, 114, 101, 99,
        101, 105, 118, 101, 100, 95, 112, 97, 99, 107, 101, 116, 95, 99, 111, 117, 110, 116, 101,
        114, 0, 112, 116, 95, 114, 101, 103, 115, 0, 114, 49, 53, 0, 114, 49, 52, 0, 114, 49, 51,
        0, 114, 49, 50, 0, 98, 112, 0, 98, 120, 0, 114, 49, 49, 0, 114, 49, 48, 0, 114, 57, 0, 114,
        56, 0, 97, 120, 0, 99, 120, 0, 100, 120, 0, 115, 105, 0, 100, 105, 0, 111, 114, 105, 103,
        95, 97, 120, 0, 105, 112, 0, 99, 115, 0, 102, 108, 97, 103, 115, 0, 115, 112, 0, 115, 115,
        0, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 0, 99, 116, 120, 0, 116,
        99, 112, 95, 114, 101, 99, 101, 105, 118, 101, 100, 95, 112, 97, 99, 107, 101, 116, 95,
        115, 105, 122, 101, 0, 117, 100, 112, 95, 114, 101, 99, 101, 105, 118, 101, 100, 95, 112,
        97, 99, 107, 101, 116, 95, 115, 105, 122, 101, 0, 99, 104, 97, 114, 0, 95, 95, 108, 105,
        99, 101, 110, 115, 101, 0, 47, 104, 111, 109, 101, 47, 115, 105, 47, 68, 111, 99, 117, 109,
        101, 110, 116, 115, 47, 100, 101, 118, 45, 112, 114, 111, 106, 101, 99, 116, 115, 47, 110,
        101, 116, 45, 109, 111, 110, 105, 116, 111, 114, 47, 46, 47, 115, 114, 99, 47, 98, 112,
        102, 47, 112, 97, 99, 107, 101, 116, 95, 115, 105, 122, 101, 46, 98, 112, 102, 46, 99, 0,
        118, 111, 105, 100, 32, 105, 110, 99, 114, 101, 97, 116, 101, 95, 114, 101, 99, 101, 105,
        118, 101, 100, 95, 112, 97, 99, 107, 101, 116, 95, 99, 111, 117, 110, 116, 101, 114, 40,
        95, 95, 117, 51, 50, 32, 112, 105, 100, 44, 32, 105, 110, 116, 32, 115, 105, 122, 101, 95,
        111, 102, 95, 110, 101, 119, 95, 112, 97, 99, 107, 101, 116, 115, 41, 0, 32, 32, 32, 32,
        105, 110, 116, 32, 42, 118, 97, 108, 117, 101, 32, 61, 32, 98, 112, 102, 95, 109, 97, 112,
        95, 108, 111, 111, 107, 117, 112, 95, 101, 108, 101, 109, 40, 38, 112, 97, 99, 107, 101,
        116, 95, 115, 116, 97, 116, 115, 44, 32, 38, 112, 105, 100, 41, 59, 0, 32, 32, 32, 32, 105,
        102, 32, 40, 118, 97, 108, 117, 101, 41, 0, 32, 32, 32, 32, 32, 32, 32, 32, 42, 118, 97,
        108, 117, 101, 32, 43, 61, 32, 115, 105, 122, 101, 95, 111, 102, 95, 110, 101, 119, 95,
        112, 97, 99, 107, 101, 116, 115, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 105, 110, 116, 32,
        116, 111, 116, 97, 108, 95, 115, 105, 122, 101, 32, 61, 32, 40, 42, 118, 97, 108, 117, 101,
        41, 32, 43, 32, 115, 105, 122, 101, 95, 111, 102, 95, 110, 101, 119, 95, 112, 97, 99, 107,
        101, 116, 115, 59, 0, 32, 32, 32, 32, 32, 32, 32, 32, 98, 112, 102, 95, 109, 97, 112, 95,
        117, 112, 100, 97, 116, 101, 95, 101, 108, 101, 109, 40, 38, 112, 97, 99, 107, 101, 116,
        95, 115, 116, 97, 116, 115, 44, 32, 38, 112, 105, 100, 44, 32, 38, 116, 111, 116, 97, 108,
        95, 115, 105, 122, 101, 44, 32, 66, 80, 70, 95, 69, 88, 73, 83, 84, 41, 59, 0, 32, 32, 32,
        32, 32, 32, 32, 32, 98, 112, 102, 95, 109, 97, 112, 95, 117, 112, 100, 97, 116, 101, 95,
        101, 108, 101, 109, 40, 38, 112, 97, 99, 107, 101, 116, 95, 115, 116, 97, 116, 115, 44, 32,
        38, 112, 105, 100, 44, 32, 38, 115, 105, 122, 101, 95, 111, 102, 95, 110, 101, 119, 95,
        112, 97, 99, 107, 101, 116, 115, 44, 32, 66, 80, 70, 95, 65, 78, 89, 41, 59, 0, 125, 0,
        105, 110, 116, 32, 66, 80, 70, 95, 75, 82, 69, 84, 80, 82, 79, 66, 69, 40, 116, 99, 112,
        95, 114, 101, 99, 101, 105, 118, 101, 100, 95, 112, 97, 99, 107, 101, 116, 95, 115, 105,
        122, 101, 44, 32, 105, 110, 116, 32, 114, 101, 116, 41, 0, 32, 32, 32, 32, 95, 95, 117, 51,
        50, 32, 112, 105, 100, 32, 61, 32, 98, 112, 102, 95, 103, 101, 116, 95, 99, 117, 114, 114,
        101, 110, 116, 95, 112, 105, 100, 95, 116, 103, 105, 100, 40, 41, 32, 62, 62, 32, 51, 50,
        59, 0, 105, 110, 116, 32, 66, 80, 70, 95, 75, 82, 69, 84, 80, 82, 79, 66, 69, 40, 117, 100,
        112, 95, 114, 101, 99, 101, 105, 118, 101, 100, 95, 112, 97, 99, 107, 101, 116, 95, 115,
        105, 122, 101, 44, 32, 105, 110, 116, 32, 114, 101, 116, 41, 0, 48, 58, 49, 48, 0, 108,
        105, 99, 101, 110, 115, 101, 0, 46, 109, 97, 112, 115, 0, 46, 116, 101, 120, 116, 0, 107,
        114, 101, 116, 112, 114, 111, 98, 101, 47, 116, 99, 112, 95, 114, 101, 99, 118, 109, 115,
        103, 0, 107, 114, 101, 116, 112, 114, 111, 98, 101, 47, 117, 100, 112, 95, 114, 101, 99,
        118, 109, 115, 103, 0, 0, 159, 235, 1, 0, 32, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 52, 0, 0,
        0, 252, 2, 0, 0, 48, 3, 0, 0, 52, 0, 0, 0, 8, 0, 0, 0, 189, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0,
        0, 14, 0, 0, 0, 195, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 19, 0, 0, 0, 217, 3, 0, 0, 1, 0, 0,
        0, 0, 0, 0, 0, 20, 0, 0, 0, 16, 0, 0, 0, 189, 3, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 53, 1, 0,
        0, 125, 1, 0, 0, 0, 72, 0, 0, 32, 0, 0, 0, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0,
        0, 53, 1, 0, 0, 199, 1, 0, 0, 18, 80, 0, 0, 64, 0, 0, 0, 53, 1, 0, 0, 2, 2, 0, 0, 9, 88, 0,
        0, 72, 0, 0, 0, 53, 1, 0, 0, 17, 2, 0, 0, 16, 96, 0, 0, 96, 0, 0, 0, 53, 1, 0, 0, 56, 2, 0,
        0, 37, 100, 0, 0, 104, 0, 0, 0, 53, 1, 0, 0, 56, 2, 0, 0, 35, 100, 0, 0, 112, 0, 0, 0, 53,
        1, 0, 0, 56, 2, 0, 0, 13, 100, 0, 0, 128, 0, 0, 0, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        152, 0, 0, 0, 53, 1, 0, 0, 113, 2, 0, 0, 9, 104, 0, 0, 192, 0, 0, 0, 53, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 216, 0, 0, 0, 53, 1, 0, 0, 187, 2, 0, 0, 9, 120, 0, 0, 240, 0, 0, 0, 53, 1,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0, 0, 53, 1, 0, 0, 12, 3, 0, 0, 1, 128, 0, 0, 195, 3,
        0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 53, 1, 0, 0, 14, 3, 0, 0, 5, 140, 0, 0, 8, 0, 0, 0, 53, 1,
        0, 0, 67, 3, 0, 0, 17, 148, 0, 0, 16, 0, 0, 0, 53, 1, 0, 0, 67, 3, 0, 0, 44, 148, 0, 0, 48,
        0, 0, 0, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 53, 1, 0, 0, 199, 1, 0, 0, 18,
        80, 0, 0, 80, 0, 0, 0, 53, 1, 0, 0, 2, 2, 0, 0, 9, 88, 0, 0, 88, 0, 0, 0, 53, 1, 0, 0, 17,
        2, 0, 0, 16, 96, 0, 0, 112, 0, 0, 0, 53, 1, 0, 0, 56, 2, 0, 0, 37, 100, 0, 0, 120, 0, 0, 0,
        53, 1, 0, 0, 56, 2, 0, 0, 35, 100, 0, 0, 128, 0, 0, 0, 53, 1, 0, 0, 56, 2, 0, 0, 13, 100,
        0, 0, 144, 0, 0, 0, 53, 1, 0, 0, 17, 2, 0, 0, 16, 96, 0, 0, 168, 0, 0, 0, 53, 1, 0, 0, 113,
        2, 0, 0, 9, 104, 0, 0, 208, 0, 0, 0, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 53,
        1, 0, 0, 187, 2, 0, 0, 9, 120, 0, 0, 0, 1, 0, 0, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 1,
        0, 0, 53, 1, 0, 0, 14, 3, 0, 0, 5, 140, 0, 0, 217, 3, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 53, 1,
        0, 0, 117, 3, 0, 0, 5, 176, 0, 0, 8, 0, 0, 0, 53, 1, 0, 0, 67, 3, 0, 0, 17, 184, 0, 0, 16,
        0, 0, 0, 53, 1, 0, 0, 67, 3, 0, 0, 44, 184, 0, 0, 48, 0, 0, 0, 53, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 56, 0, 0, 0, 53, 1, 0, 0, 199, 1, 0, 0, 18, 80, 0, 0, 80, 0, 0, 0, 53, 1, 0, 0, 2,
        2, 0, 0, 9, 88, 0, 0, 88, 0, 0, 0, 53, 1, 0, 0, 17, 2, 0, 0, 16, 96, 0, 0, 112, 0, 0, 0,
        53, 1, 0, 0, 56, 2, 0, 0, 37, 100, 0, 0, 120, 0, 0, 0, 53, 1, 0, 0, 56, 2, 0, 0, 35, 100,
        0, 0, 128, 0, 0, 0, 53, 1, 0, 0, 56, 2, 0, 0, 13, 100, 0, 0, 144, 0, 0, 0, 53, 1, 0, 0, 17,
        2, 0, 0, 16, 96, 0, 0, 168, 0, 0, 0, 53, 1, 0, 0, 113, 2, 0, 0, 9, 104, 0, 0, 208, 0, 0, 0,
        53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 53, 1, 0, 0, 187, 2, 0, 0, 9, 120, 0, 0,
        0, 1, 0, 0, 53, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 1, 0, 0, 53, 1, 0, 0, 117, 3, 0, 0, 5,
        176, 0, 0, 16, 0, 0, 0, 195, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 170, 3, 0, 0, 0,
        0, 0, 0, 217, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 170, 3, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        64, 0, 0, 0, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 136, 1, 0, 0, 0, 0, 0, 0, 128, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 8,
        0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 3, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 1, 0, 0, 0, 6, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 4, 0, 0, 0, 0, 0, 0, 24, 1, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 1, 0, 0,
        0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 5, 0, 0, 0, 0, 0, 0, 24, 1, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 0, 0,
        0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 6, 0, 0, 0, 0, 0, 0, 4,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 75, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 6, 0, 0, 0,
        0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 247, 0, 0, 0, 9, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        96, 6, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 0, 0,
        0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 9, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 144, 6, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 8,
        0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 27, 1, 0, 0, 9, 0, 0, 0, 64, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 6, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0,
        0, 5, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 53, 1, 0, 0, 1, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 240, 6, 0, 0, 0, 0, 0, 0, 207, 6, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 1, 0, 0,
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 13, 0, 0, 0, 0, 0, 0, 132,
        3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0,
    ];
}
